class Solution:
    def tribonacci(self, n: int) -> int:

        # def f(n):
        #     if n == 0 :
        #         return 0
        #     if n == 1 or n == 2:
        #         return 1
        #     return f(n-1)+f(n-2)+f(n-3)
        # return f(n)

        # def f(n,dp):
        #     if n == 0:
        #         return 0
        #     if n == 1 or n == 2:
        #         return 1
        #     if dp[n] != -1:
        #         return dp[n]
        #     dp[n] = f(n-1,dp)+f(n-2,dp)+f(n-3,dp)
        #     return dp[n]
        # dp = [-1]*(n+1)
        # return f(n,dp)
        
        # if n == 0:
        #     return 0
        # if n == 1 or n == 2:
        #     return 1
        # dp = [0]*(n+1)
        # dp[1],dp[2] = 1,1
        # for i in range(3,n+1):
        #     dp[i] = dp[i-1]+dp[i-2]+dp[i-3]
        # return dp[n]


        if n == 0:
            return 0
        if n == 1 or n == 2:
            return 1
        a,b,c = 0,1,1
        for _ in range(3,n+1):
            a,b,c = b,c,a+b+c
        return c
